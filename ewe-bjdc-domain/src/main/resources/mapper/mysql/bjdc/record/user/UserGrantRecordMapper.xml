<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.mysql.bjdc.record.user.UserGrantRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ewe.bjdc.domain.record.user.UserGrantRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="org_name" property="orgName" jdbcType="VARCHAR" />
    <result column="service_no_list" property="serviceNoList" jdbcType="VARCHAR" />
    <result column="auth_term" property="authTerm" jdbcType="VARCHAR" />
    <result column="auth_time" property="authTime" jdbcType="TIMESTAMP" />
    <result column="auth_status" property="authStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_staff" property="createStaff" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_staff" property="updateStaff" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, cid, name, phone, org_name, service_no_list, auth_term, auth_time, auth_status, 
    create_time, create_staff, update_time, update_staff, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_USER_GRANT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from C_USER_GRANT_RECORD
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from C_USER_GRANT_RECORD
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecordExample" >
    delete from C_USER_GRANT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecord" keyProperty="id" useGeneratedKeys="true">
    insert into C_USER_GRANT_RECORD (id, user_id, cid, 
      name, phone, org_name, 
      service_no_list, auth_term, auth_time, 
      auth_status, create_time, create_staff, 
      update_time, update_staff, status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{cid,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{serviceNoList,jdbcType=VARCHAR}, #{authTerm,jdbcType=VARCHAR}, #{authTime,jdbcType=TIMESTAMP}, 
      #{authStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createStaff,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateStaff,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecord" keyProperty="id" useGeneratedKeys="true">
    insert into C_USER_GRANT_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="orgName != null" >
        org_name,
      </if>
      <if test="serviceNoList != null" >
        service_no_list,
      </if>
      <if test="authTerm != null" >
        auth_term,
      </if>
      <if test="authTime != null" >
        auth_time,
      </if>
      <if test="authStatus != null" >
        auth_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createStaff != null" >
        create_staff,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateStaff != null" >
        update_staff,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="serviceNoList != null" >
        #{serviceNoList,jdbcType=VARCHAR},
      </if>
      <if test="authTerm != null" >
        #{authTerm,jdbcType=VARCHAR},
      </if>
      <if test="authTime != null" >
        #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null" >
        #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecordExample" resultType="java.lang.Integer" >
    select count(*) from C_USER_GRANT_RECORD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update C_USER_GRANT_RECORD
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null" >
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceNoList != null" >
        service_no_list = #{record.serviceNoList,jdbcType=VARCHAR},
      </if>
      <if test="record.authTerm != null" >
        auth_term = #{record.authTerm,jdbcType=VARCHAR},
      </if>
      <if test="record.authTime != null" >
        auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authStatus != null" >
        auth_status = #{record.authStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        create_staff = #{record.createStaff,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateStaff != null" >
        update_staff = #{record.updateStaff,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update C_USER_GRANT_RECORD
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      service_no_list = #{record.serviceNoList,jdbcType=VARCHAR},
      auth_term = #{record.authTerm,jdbcType=VARCHAR},
      auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      auth_status = #{record.authStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_staff = #{record.createStaff,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_staff = #{record.updateStaff,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecord" >
    update C_USER_GRANT_RECORD
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="serviceNoList != null" >
        service_no_list = #{serviceNoList,jdbcType=VARCHAR},
      </if>
      <if test="authTerm != null" >
        auth_term = #{authTerm,jdbcType=VARCHAR},
      </if>
      <if test="authTime != null" >
        auth_time = #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null" >
        auth_status = #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        create_staff = #{createStaff,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateStaff != null" >
        update_staff = #{updateStaff,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ewe.bjdc.domain.record.user.UserGrantRecord" >
    update C_USER_GRANT_RECORD
    set user_id = #{userId,jdbcType=INTEGER},
      cid = #{cid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      service_no_list = #{serviceNoList,jdbcType=VARCHAR},
      auth_term = #{authTerm,jdbcType=VARCHAR},
      auth_time = #{authTime,jdbcType=TIMESTAMP},
      auth_status = #{authStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_staff = #{createStaff,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_staff = #{updateStaff,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>